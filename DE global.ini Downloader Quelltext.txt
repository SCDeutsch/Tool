import tkinter as tk
from tkinter import messagebox
import requests
import os


# Funktion, um die Datei herunterzuladen
def download_file():
    url = entry_source_a.get()  # URL aus Quelle A
    save_path = entry_source_b.get()  # Speicherort aus Quelle B

    # Überprüfen, ob die URL und der Speicherort eingegeben wurden
    if not url or not save_path:
        messagebox.showerror("Achtung", "Bitte fülle beide Felder aus.")
        return

    try:
        # HTTP-Anfrage, um die Datei herunterzuladen
        response = requests.get(url)
        response.raise_for_status()  # Überprüfen, ob der Download erfolgreich war

        # Verzeichnis erstellen, wenn es noch nicht existiert
        os.makedirs(os.path.dirname(save_path), exist_ok=True)

        # Datei speichern
        with open(save_path, 'wb') as file:
            file.write(response.content)

        messagebox.showinfo("Landing complete!", "global.ini wurde aktualisiert")
    except requests.exceptions.RequestException as e:
        messagebox.showerror("Fehler", f"Fehler beim Herunterladen der Datei: {e}")

# Funktion, um Quellen aus der Textdatei sources.txt zu lesen
def load_sources_from_file():
    try:
        with open('sources.txt', 'r') as file:
            lines = file.readlines()
            if len(lines) >= 2:
                entry_source_a.delete(0, tk.END)
                entry_source_a.insert(0, lines[0].strip())  # Quelle A (URL)
                entry_source_b.delete(0,tk.END)
                entry_source_b.insert(0, lines[1].strip())  # Quelle B (Speicherort)
            else:
                messagebox.showwarning("Achtung", "Die Textdatei muss aus zwei Zeilen bestehen. Erste Zeile führt zur global.ini-Quelldatei als URL. Die zweite Zeile führt zum lokalen Speicherort deiner global.ini.")
    except FileNotFoundError:
        messagebox.showerror("Fehler", "Die Datei 'sources.txt' wurde nicht gefunden. Erstelle eine neue Textdatei im selben Ordner dieses Downloaders.")
    except Exception as e:
        messagebox.showerror("Fehler", f"Fehler beim Laden der Quellen: {e}")

# GUI erstellen
root = tk.Tk()
root.title("DE global.ini Downloader v0.2")
root.iconbitmap('star.ico')
root.configure(bg="darkolivegreen")

# Mehrzeiliges Textfeld
description_text = tk.Text(root, width=110, height=20, wrap=tk.WORD, padx=10, pady=10, fg="greenyellow", bg="black")
description_text.pack(pady=5)
description_text.insert(tk.END, "Vielen Dank, dass du den 'DE global.ini Downloader' nutzt!\n"
                               "Hiermit bleibt deine Übersetzung auf dem aktuellsten Stand. Von der Community, für die Community!\n\n"
                               "1. Im ersten Feld muss die URL der Quelldatei angegeben werden. (Vorauswahl steht bereits drin).\n\n"
                               "2. Im zweiten Feld muss der lokale Pfad deiner global.ini Datei angegeben werden.\n"
                               "   Achte auf die verschiedenen Versionen wie PTU oder LIVE etc. (Vorauswahl steht bereits drin).\n\n"
                               "3. Du kannst auch einfach Voreinstellungen direkt aus der 'sources.txt' laden. Passe diese deinen Wünschen an.\n\n"
                               "   Falls diese Datei noch nicht existiert, erstelle einfach eine neue Textdatei mit dem Namen 'sources.txt'.\n"
                               "   Beachte, dass folgende Struktur innerhalb der Textdatei eingehalten werden muss:\n"
                               "   - Zeile 1: Direkte URL zur Quelldatei mit '/global.ini' als Endung\n"
                               "   - Zeile 2: Dateipfad zu deiner lokalen 'global.ini' Datei\n\n"
                               "4. Klicke auf 'Jetzt aktualisieren!' um die lokale Datei zu aktualisieren.\n\n"
                               "ACHTUNG: Die Datei wird OHNE NACHFRAGE überschrieben. Halte immer eine Sicherung bereit!\n\n"
                               "Wir sehen uns im Verse!")

# Quellen A und B
label_source_a = tk.Label(root, text="Quelldatei - global.ini (URL):", fg="greenyellow", bg="black")
label_source_a.pack(pady=5)

entry_source_a = tk.Entry(root, width=140, fg="black", bg="lightgrey")
entry_source_a.pack(pady=5)
entry_source_a.insert(0, "https://raw.githubusercontent.com/SCDeutsch/SCD/main/global.ini")

label_source_b = tk.Label(root, text="Dateipfad zu deiner global.ini:", fg="greenyellow", bg="black")
label_source_b.pack(pady=5)

entry_source_b = tk.Entry(root, width=140, fg="black", bg="lightgrey")
entry_source_b.pack(pady=5)
entry_source_b.insert(0, "C:\Program Files\Roberts Space Industries\StarCitizen\LIVE\data\Localization\english\global.ini")

# Button, um die Quellen aus der Datei zu laden
button_load_sources = tk.Button(root, text="Quellen der 'sources.txt' einfügen", command=load_sources_from_file)
button_load_sources.pack(pady=5)

# Button zum Starten des Downloads
button_download = tk.Button(root, text="Jetzt aktualisieren!", command=download_file)
button_download.pack(pady=20)

# GUI starten
root.mainloop()
